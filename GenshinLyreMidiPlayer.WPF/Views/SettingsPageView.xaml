<UserControl
    x:Class="GenshinLyreMidiPlayer.WPF.Views.SettingsPageView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d"

    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:modern="http://schemas.modernwpf.com/2019"

    xmlns:s="https://github.com/canton7/Stylet"
    xmlns:theme="clr-namespace:GenshinLyreMidiPlayer.WPF.ModernWPF.Theme"
    xmlns:core="clr-namespace:GenshinLyreMidiPlayer.WPF.Core"
    xmlns:viewModels="clr-namespace:GenshinLyreMidiPlayer.WPF.ViewModels"
    xmlns:transitions="clr-namespace:GenshinLyreMidiPlayer.WPF.ModernWPF.Animation.Transitions"
    xmlns:properties="clr-namespace:GenshinLyreMidiPlayer.Data.Properties;assembly=GenshinLyreMidiPlayer.Data"

    d:DataContext="{d:DesignInstance Type=viewModels:SettingsPageViewModel}">
    <UserControl.Resources>
        <theme:AppThemeConverter x:Key="AppThemeConverter" />
        <properties:Settings x:Key="Settings" />
    </UserControl.Resources>

    <ScrollViewer>
        <modern:SimpleStackPanel>
            <modern:SimpleStackPanel Orientation="Horizontal">
                <modern:ToggleSwitch
                    Header="Test Mode (Speakers)"
                    IsEnabled="{Binding CanUseSpeakers}"
                    IsOn="{Binding Default.UseSpeakers, Source={StaticResource Settings}}" />

                <modern:ToggleSwitch
                    Header="Transpose"
                    IsOn="{Binding Default.TransposeNotes, Source={StaticResource Settings}}" />

                <modern:NumberBox
                    Header="{Binding Key}" Value="{Binding KeyOffset}"
                    Minimum="{Binding MinOffset}" Maximum="{Binding MaxOffset}" />
            </modern:SimpleStackPanel>

            <modern:SimpleStackPanel Orientation="Horizontal">
                <modern:ToggleSwitch
                    Header="Hold notes"
                    IsOn="{Binding Default.HoldNotes, Source={StaticResource Settings}}" />

                <modern:ToggleSwitch
                    Header="Merge nearby notes"
                    IsOn="{Binding MergeNotes}" />

                <modern:NumberBox
                    Header="Tolerance (ms)" IsEnabled="{Binding MergeNotes}"
                    Value="{Binding MergeMilliseconds}" />
            </modern:SimpleStackPanel>

            <modern:SimpleStackPanel Orientation="Horizontal">
                <GroupBox Header="Instrument">
                    <ComboBox
                        ItemsSource="{x:Static core:Keyboard.InstrumentNames}"
                        SelectedItem="{Binding SelectedInstrument}"
                        SelectedIndex="{Binding Default.SelectedInstrument, Source={StaticResource Settings}}"
                        DisplayMemberPath="Value"
                    />
                </GroupBox>
            </modern:SimpleStackPanel>

            <modern:SimpleStackPanel Orientation="Horizontal">
                <GroupBox Header="Transpose">
                    <ComboBox
                        ItemsSource="{x:Static viewModels:SettingsPageViewModel.TransposeNames}"
                        SelectedItem="{Binding Transpose}"
                        DisplayMemberPath="Value" />
                </GroupBox>

                <GroupBox Header="Speed">
                    <ComboBox
                        ItemsSource="{Binding MidiSpeeds}"
                        SelectedItem="{Binding SelectedSpeed}"
                        SelectedIndex="{Binding Default.SelectedSpeed, Source={StaticResource Settings}}"
                        DisplayMemberPath="SpeedName" />
                </GroupBox>
            </modern:SimpleStackPanel>

            <GroupBox Header="Timer">
                <modern:SimpleStackPanel Orientation="Horizontal">
                    <modern:SimpleStackPanel.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" />
                    </modern:SimpleStackPanel.Resources>

                    <modern:SimpleTimePicker SelectedDateTime="{Binding DateTime}" IsEnabled="{Binding CanChangeTime}" />
                    <Button Command="{s:Action SetTimeToNow}" IsEnabled="{Binding CanChangeTime}">Now</Button>
                    <Button Command="{s:Action StartStopTimer}" Content="{Binding TimerText}" />
                </modern:SimpleStackPanel>
            </GroupBox>

            <GroupBox Header="Location">
                <modern:SimpleStackPanel Orientation="Horizontal">
                    <Button Command="{s:Action SetLocation}" Background="Transparent">
                        <ui:FontIcon Glyph="&#xE8E5;" FontFamily="Segoe MDL2 Assets" />
                    </Button>
                    <TextBlock Text="{x:Static viewModels:SettingsPageViewModel.GenshinLocation}"
                               VerticalAlignment="Center" />
                </modern:SimpleStackPanel>
            </GroupBox>

            <GroupBox Header="Version">
                <modern:SimpleStackPanel>
                    <modern:SimpleStackPanel Orientation="Horizontal">
	                    <TextBlock x:Name="VersionText" VerticalAlignment="Center"
	                               Style="{DynamicResource SubtitleTextBlockStyle}">
		                    You are running version
		                    v<Run Text="{Binding ProgramVersion, Mode=OneTime}" />
	                    </TextBlock>
                        <Button Command="{s:Action CheckForUpdate}"
	                            Visibility="{Binding IsCheckingUpdate, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}">
                            <ui:FontIcon Glyph="&#xE72C;" FontFamily="Segoe MDL2 Assets" />
                        </Button>
                        <ui:ProgressRing 
	                        IsIndeterminate="True" IsEnabled="{Binding IsCheckingUpdate}"
                            Visibility="{Binding IsCheckingUpdate, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" />
                    </modern:SimpleStackPanel>

                    <TextBlock
                        Visibility="{Binding NeedsUpdate, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                        Click to download update:
                        <Hyperlink
                            NavigateUri="{Binding LatestVersion.Url}">
                            <Run Text="{Binding LatestVersion.TagName}" /> -
                            <Run Text="{Binding LatestVersion.Name}" />
                        </Hyperlink>
                    </TextBlock>

                    <modern:ToggleSwitch Header="Automatically check updates" IsOn="{Binding AutoCheckUpdates}" />
                    <modern:ToggleSwitch Header="Include beta updates" IsOn="{Binding IncludeBetaUpdates}" />
                </modern:SimpleStackPanel>
            </GroupBox>

            <GroupBox Header="Theme Mode">
                <modern:RadioButtons
                    SelectedItem="{Binding
                        Source={x:Static modern:ThemeManager.Current}, Path=ApplicationTheme,
                        Converter={StaticResource AppThemeConverter}}"
                    SelectionChanged="{s:Action OnThemeChanged}"
                    SelectedIndex="{Binding Default.AppTheme, Source={StaticResource Settings}}">
                    <modern:RadioButtons.ItemsSource>
                        <theme:AppThemes />
                    </modern:RadioButtons.ItemsSource>
                </modern:RadioButtons>
            </GroupBox>

            <GroupBox Header="Transition style">
                <ComboBox
                    SelectedItem="{Binding Transition}"
                    SelectedIndex="{Binding Default.SelectedTransition, Source={StaticResource Settings}}"
                    ItemsSource="{x:Static transitions:TransitionCollection.Transitions}" />
            </GroupBox>

            <GroupBox Header="License">
                <modern:SimpleStackPanel Margin="10">
                    <TextBlock>
                        Created by © 2022 sabihoshi under the
                        <Hyperlink NavigateUri="{Binding Default.LicenseUri, Source={StaticResource Settings}}">
                            MIT License
                        </Hyperlink>
                        .
                    </TextBlock>
                    <TextBlock TextWrapping="Wrap">
                        This project uses third-party libraries or other resources that may be distributed under
                        <Hyperlink
                            NavigateUri="{Binding Default.ThirdPartyLicenseUri, Source={StaticResource Settings}}">
                            different licenses
                        </Hyperlink>
                        .
                    </TextBlock>
                    <TextBlock Style="{DynamicResource BaseTextBlockStyle}">
                        All rights reserved by © miHoYo Co., Ltd.
                        This project is not affiliated nor endorsed by miHoYo.
                        Genshin Impact™ and other properties belong to their respective owners.
                    </TextBlock>
                </modern:SimpleStackPanel>
            </GroupBox>
        </modern:SimpleStackPanel>
    </ScrollViewer>
</UserControl>